
CREATE TABLE T_IDENTITY
(
  IDENTITY_KEY         INTEGER                  NOT NULL,
  IDENTITY_NAME        VARCHAR(64)             NOT NULL,
  IDENTITY_TYPE_KEY    INTEGER                  NOT NULL,
  DESCRIPTION          VARCHAR(128)                NULL,
  SALT                 INTEGER                      NULL,
  ENABLED              CHAR(1)                  DEFAULT '1'                   NOT NULL,
  LOGIN_ENABLED        CHAR(1)                  DEFAULT '1'                   NOT NULL,
  PWD                  VARCHAR(128)                NULL,
  START_DATE           TIMESTAMP with TIME ZONE                    WITH DEFAULT               NOT NULL,
  END_DATE             TIMESTAMP with TIME ZONE                    DEFAULT '9999-01-01 00:00:00' NOT NULL,
  LAST_MODIFIED        TIMESTAMP with TIME ZONE                    WITH DEFAULT               NOT NULL,
  OPERATOR_MODIFIED    INTEGER                      NULL,
  FIRST_NAME           VARCHAR(128)                NULL,
  LAST_NAME            VARCHAR(128)                NULL,
  EMAIL                VARCHAR(64)                 NULL,
  PWD_MUST_BE_CHANGED  INTEGER                  DEFAULT 1                     NOT NULL,
  PHONE                VARCHAR(64)                 NULL,
  EMAIL2               VARCHAR(64)                 NULL,
  EXTERNAL_KEY         INTEGER                      NULL,
  EXTERNAL_ID          VARCHAR(64)                 NULL,
  PREFERENCES          CLOB
)
;


CREATE TABLE T_IDENTITY_TO_IDENTITY
(
  PARENT_IDENTITY_KEY  INTEGER                  NOT NULL,
  IDENTITY_KEY         INTEGER                  NOT NULL,
  LAST_MODIFIED        TIMESTAMP with TIME ZONE                    WITH DEFAULT               NOT NULL,
  OPERATOR_MODIFIED    INTEGER                      NULL
)



;


CREATE TABLE T_IDENTITY_TO_ROLE
(
  ROLE_KEY           INTEGER                    NOT NULL,
  IDENTITY_KEY       INTEGER                    NOT NULL,
  CONTEXT            VARCHAR(32)               DEFAULT '*'                   NOT NULL,
  POSITION           INTEGER                    NOT NULL,
  LAST_MODIFIED      TIMESTAMP with TIME ZONE                      WITH DEFAULT               NOT NULL,
  OPERATOR_MODIFIED  INTEGER                        NULL
)



;


CREATE TABLE T_IDENTITY_TYPE
(
  IDENTITY_TYPE_KEY   INTEGER                   NOT NULL,
  IDENTITY_TYPE_NAME  VARCHAR(64)              NOT NULL,
  DESCRIPTION         VARCHAR(128)                 NULL,
  LAST_MODIFIED       TIMESTAMP  with TIME ZONE                    WITH DEFAULT               NOT NULL,
  OPERATOR_MODIFIED   INTEGER                       NULL
)



;


CREATE TABLE T_RIGHT
(
  RIGHT_KEY          INTEGER                    NOT NULL,
  RIGHT_NAME         VARCHAR(64)               NOT NULL,
  DESCRIPTION        VARCHAR(128)                  NULL,
  LAST_MODIFIED      TIMESTAMP with TIME ZONE                      WITH DEFAULT               NOT NULL,
  OPERATOR_MODIFIED  INTEGER                        NULL
)



;


CREATE TABLE T_ROLE
(
  ROLE_KEY           INTEGER                    NOT NULL,
  ROLE_NAME          VARCHAR(64)               NOT NULL,
  DESCRIPTION        VARCHAR(128)                  NULL,
  LAST_MODIFIED      TIMESTAMP with TIME ZONE                      WITH DEFAULT               NOT NULL,
  OPERATOR_MODIFIED  INTEGER                        NULL
)



;


CREATE TABLE T_ROLE_TO_RIGHT
(
  ROLE_KEY           INTEGER                    NOT NULL,
  RIGHT_KEY          INTEGER                    NOT NULL,
  LAST_MODIFIED      TIMESTAMP with TIME ZONE                      WITH DEFAULT               NOT NULL,
  RIGHT_VALUE        VARCHAR(512)              NOT NULL,
  RIGHT_CONTEXT      VARCHAR(128)              DEFAULT '*'                   NOT NULL,
  OPERATOR_MODIFIED  INTEGER                        NULL
)



;


CREATE UNIQUE INDEX U_ID_TO_ID ON T_IDENTITY_TO_IDENTITY
(PARENT_IDENTITY_KEY, IDENTITY_KEY)

;
CREATE SEQUENCE S_IDENTITY
  START WITH 10000
;

ALTER TABLE T_IDENTITY ADD PRIMARY KEY (IDENTITY_KEY);

ALTER TABLE T_IDENTITY ADD UNIQUE (IDENTITY_NAME);


ALTER TABLE T_IDENTITY_TO_IDENTITY ADD CONSTRAINT U_ID_TO_ID UNIQUE (PARENT_IDENTITY_KEY, IDENTITY_KEY);


ALTER TABLE T_IDENTITY_TO_ROLE ADD UNIQUE (ROLE_KEY, IDENTITY_KEY);


ALTER TABLE T_IDENTITY_TYPE ADD PRIMARY KEY (IDENTITY_TYPE_KEY);

ALTER TABLE T_IDENTITY_TYPE ADD UNIQUE (IDENTITY_TYPE_NAME);


ALTER TABLE T_RIGHT ADD PRIMARY KEY (RIGHT_KEY);

ALTER TABLE T_RIGHT ADD UNIQUE (RIGHT_NAME);


ALTER TABLE T_ROLE ADD PRIMARY KEY (ROLE_KEY);

ALTER TABLE T_ROLE ADD UNIQUE (ROLE_NAME);


ALTER TABLE T_ROLE_TO_RIGHT ADD UNIQUE (ROLE_KEY, RIGHT_KEY);


ALTER TABLE T_IDENTITY ADD FOREIGN KEY (OPERATOR_MODIFIED) REFERENCES T_IDENTITY (IDENTITY_KEY);

ALTER TABLE T_IDENTITY ADD FOREIGN KEY (IDENTITY_TYPE_KEY) REFERENCES T_IDENTITY_TYPE (IDENTITY_TYPE_KEY);


ALTER TABLE T_IDENTITY_TO_IDENTITY ADD FOREIGN KEY (IDENTITY_KEY) REFERENCES T_IDENTITY (IDENTITY_KEY);

ALTER TABLE T_IDENTITY_TO_IDENTITY ADD FOREIGN KEY (PARENT_IDENTITY_KEY) REFERENCES T_IDENTITY (IDENTITY_KEY);

ALTER TABLE T_IDENTITY_TO_IDENTITY ADD FOREIGN KEY (OPERATOR_MODIFIED) REFERENCES T_IDENTITY (IDENTITY_KEY);


ALTER TABLE T_IDENTITY_TO_ROLE ADD FOREIGN KEY (OPERATOR_MODIFIED) REFERENCES T_IDENTITY (IDENTITY_KEY);

ALTER TABLE T_IDENTITY_TO_ROLE ADD FOREIGN KEY (ROLE_KEY) REFERENCES T_ROLE (ROLE_KEY);

ALTER TABLE T_IDENTITY_TO_ROLE ADD FOREIGN KEY (IDENTITY_KEY) REFERENCES T_IDENTITY (IDENTITY_KEY);


ALTER TABLE T_IDENTITY_TYPE ADD FOREIGN KEY (OPERATOR_MODIFIED) REFERENCES T_IDENTITY (IDENTITY_KEY);


ALTER TABLE T_RIGHT ADD FOREIGN KEY (OPERATOR_MODIFIED) REFERENCES T_IDENTITY (IDENTITY_KEY);


ALTER TABLE T_ROLE ADD FOREIGN KEY (OPERATOR_MODIFIED) REFERENCES T_IDENTITY (IDENTITY_KEY);


ALTER TABLE T_ROLE_TO_RIGHT ADD FOREIGN KEY (OPERATOR_MODIFIED) REFERENCES T_IDENTITY (IDENTITY_KEY);

ALTER TABLE T_ROLE_TO_RIGHT ADD FOREIGN KEY (ROLE_KEY) REFERENCES T_ROLE (ROLE_KEY);

ALTER TABLE T_ROLE_TO_RIGHT ADD FOREIGN KEY (RIGHT_KEY) REFERENCES T_RIGHT (RIGHT_KEY);




commit;

\g
\q
