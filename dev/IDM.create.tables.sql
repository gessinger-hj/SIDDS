CREATE TABLE T_IDENTITY
(
  IDENTITY_KEY         INTEGER                  NOT NULL,
  IDENTITY_NAME        VARCHAR2(64 BYTE)        NOT NULL,
  IDENTITY_TYPE_KEY    INTEGER                  NOT NULL,
  DESCRIPTION          VARCHAR2(128 BYTE),
  SALT                 INTEGER,
  ENABLED              CHAR(1 BYTE)             DEFAULT '1'                   NOT NULL,
  LOGIN_ENABLED        CHAR(1 BYTE)             DEFAULT '1'                   NOT NULL,
  PWD                  VARCHAR2(128 BYTE),
  START_DATE           DATE                     DEFAULT SYSDATE               NOT NULL,
  END_DATE             DATE                     DEFAULT to_date ( '9999-01-01', 'YYYY-MM-DD' ) NOT NULL,
  LAST_MODIFIED        DATE                     DEFAULT SYSDATE               NOT NULL,
  OPERATOR_MODIFIED    INTEGER,
  FIRST_NAME           VARCHAR2(128 BYTE),
  LAST_NAME            VARCHAR2(128 BYTE),
  EMAIL                VARCHAR2(64 BYTE),
  PWD_MUST_BE_CHANGED  INTEGER                  DEFAULT 1                     NOT NULL,
  PHONE                VARCHAR2(64 BYTE),
  EMAIL2               VARCHAR2(64 BYTE),
  EXTERNAL_KEY         INTEGER,
  EXTERNAL_ID          VARCHAR2(64 BYTE),
  PREFERENCES          CLOB
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE T_IDENTITY_TO_IDENTITY
(
  PARENT_IDENTITY_KEY  INTEGER                  NOT NULL,
  IDENTITY_KEY         INTEGER                  NOT NULL,
  LAST_MODIFIED        DATE                     DEFAULT SYSDATE               NOT NULL,
  OPERATOR_MODIFIED    INTEGER
)
LOGGING 
NOCACHE
NOPARALLEL;

CREATE TABLE T_IDENTITY_TO_ROLE
(
  ROLE_KEY           INTEGER                    NOT NULL,
  IDENTITY_KEY       INTEGER                    NOT NULL,
  CONTEXT            VARCHAR2(32) DEFAULT '*'   NOT NULL,
  POSITION           INTEGER                    NOT NULL,
  LAST_MODIFIED      DATE                       DEFAULT SYSDATE               NOT NULL,
  OPERATOR_MODIFIED  INTEGER
)
LOGGING 
NOCACHE
NOPARALLEL;

CREATE TABLE T_IDENTITY_TYPE
(
  IDENTITY_TYPE_KEY   INTEGER                   NOT NULL,
  IDENTITY_TYPE_NAME  VARCHAR2(64 BYTE)         NOT NULL,
  DESCRIPTION         VARCHAR2(128 BYTE),
  LAST_MODIFIED       DATE                      DEFAULT SYSDATE               NOT NULL,
  OPERATOR_MODIFIED   INTEGER
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE T_RIGHT
(
  RIGHT_KEY          INTEGER                    NOT NULL,
  RIGHT_NAME         VARCHAR2(64 BYTE)          NOT NULL,
  DESCRIPTION        VARCHAR2(128 BYTE),
  LAST_MODIFIED      DATE                       DEFAULT SYSDATE               NOT NULL,
  OPERATOR_MODIFIED  INTEGER
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE T_ROLE
(
  ROLE_KEY           INTEGER                    NOT NULL,
  ROLE_NAME          VARCHAR2(64 BYTE)          NOT NULL,
  DESCRIPTION        VARCHAR2(128 BYTE),
  LAST_MODIFIED      DATE                       DEFAULT SYSDATE               NOT NULL,
  OPERATOR_MODIFIED  INTEGER
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE T_ROLE_TO_RIGHT
(
  ROLE_KEY           INTEGER                    NOT NULL,
  RIGHT_KEY          INTEGER                    NOT NULL,
  LAST_MODIFIED      DATE                       DEFAULT SYSDATE               NOT NULL,
  RIGHT_VALUE        VARCHAR2(512 BYTE)         NOT NULL,
  RIGHT_CONTEXT      VARCHAR2(128 BYTE)         DEFAULT '*'                   NOT NULL,
  OPERATOR_MODIFIED  INTEGER
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE UNIQUE INDEX U_ID_TO_ID ON T_IDENTITY_TO_IDENTITY
(PARENT_IDENTITY_KEY, IDENTITY_KEY)
LOGGING
NOPARALLEL;

CREATE SEQUENCE S_IDENTITY
  START WITH 10000
  MAXVALUE 1E27
  MINVALUE 10000
  NOCYCLE
  CACHE 20
  NOORDER;


CREATE OR REPLACE TRIGGER TR_T_IDENTITY_LM
BEFORE INSERT OR UPDATE ON T_IDENTITY FOR EACH ROW
DECLARE
BEGIN
  SELECT SYSDATE INTO :NEW.LAST_MODIFIED FROM DUAL;
END;
/
SHOW ERRORS;



CREATE OR REPLACE TRIGGER TR_T_IDENTITY_TO_IDENTITY_LM
BEFORE INSERT OR UPDATE ON T_IDENTITY_TO_IDENTITY FOR EACH ROW
DECLARE
BEGIN
  SELECT SYSDATE INTO :NEW.LAST_MODIFIED FROM DUAL;
END;
/
SHOW ERRORS;



CREATE OR REPLACE TRIGGER TR_T_IDENTITY_TO_ROLE_LM
BEFORE INSERT OR UPDATE ON T_IDENTITY_TO_ROLE FOR EACH ROW
DECLARE
BEGIN
  SELECT SYSDATE INTO :NEW.LAST_MODIFIED FROM DUAL;
END;
/
SHOW ERRORS;



CREATE OR REPLACE TRIGGER TR_T_IDENTITY_TYPE_LM
BEFORE INSERT OR UPDATE ON T_IDENTITY_TYPE FOR EACH ROW
DECLARE
BEGIN
  SELECT SYSDATE INTO :NEW.LAST_MODIFIED FROM DUAL;
END;
/
SHOW ERRORS;



CREATE OR REPLACE TRIGGER TR_T_RIGHT_LM
BEFORE INSERT OR UPDATE ON T_RIGHT FOR EACH ROW
DECLARE
BEGIN
  SELECT SYSDATE INTO :NEW.LAST_MODIFIED FROM DUAL;
END;
/
SHOW ERRORS;



CREATE OR REPLACE TRIGGER TR_T_ROLE_LM
BEFORE INSERT OR UPDATE ON T_ROLE FOR EACH ROW
DECLARE
BEGIN
  SELECT SYSDATE INTO :NEW.LAST_MODIFIED FROM DUAL;
END;
/
SHOW ERRORS;



CREATE OR REPLACE TRIGGER TR_T_ROLE_TO_RIGHT_LM
BEFORE INSERT OR UPDATE ON T_ROLE_TO_RIGHT FOR EACH ROW
DECLARE
BEGIN
  SELECT SYSDATE INTO :NEW.LAST_MODIFIED FROM DUAL;
END;
/
SHOW ERRORS;

exit
